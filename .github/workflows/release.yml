name: BUILD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs: {}

jobs:
  build-linux:
    name: Build wheels on Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      # - name: Ensure pipx (it necesary only when you run actions locally with the act)
      #   if: runner.os == 'Linux'
      #   run: |
      #     command -v pipx >/dev/null 2>&1 || apt update -y \
      #     && apt install -y python3-pip python3-venv \
      #     && python3 -m pip install pipx \
      #     && python3 -m pipx ensurepath \
      #     && pipx --version

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        env:
          CIBW_ENVIRONMENT: PATH=$(pwd)/go/bin:$PATH
          CIBW_BEFORE_ALL: sh pre-build-command.sh
          CIBW_BUILD: "cp38-* cp39-* cp310-*"
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_ARCHS_LINUX: x86_64 aarch64

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  build-macos:
    name: Build wheels on MacOS
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.9.0
        env:
          CIBW_ENVIRONMENT: PATH=$(pwd)/go/bin:$PATH
          CIBW_BEFORE_ALL: sh pre-build-command.sh
          CIBW_BUILD: "cp38-* cp39-* cp310-*"
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_ARCHS_MACOS: x86_64 universal2

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  # upload:
  #   name: upload
  #   if: startsWith(github.ref, 'refs/tags/')
  #   needs: [build-linux, build-macos]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheels
  #         path: dist

  #     - name: Display structure of downloaded files
  #       run: ls -lh dist

  #     - uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: ${{ secrets.PYPI_USERNAME }}
  #         password: ${{ secrets.PYPI_PASSWORD }}
